# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
# image: python:latest
image: python:3.9-buster

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip

before_script:
  - python --version  # For debugging

stages:
  - lint
  - test
  - build-and-push
  - deploy


lint-pylint:
  stage: lint
  before_script:
    - python -m pip install --upgrade pip
    - pip install pylint
    - pip install -r requirements.txt
  script:
    - pylint *.py


lint-flake8:
  stage: lint
  before_script:
    - python -m pip install --upgrade pip
    - pip install flake8
  script:
    - flake8 *.py


test-job:
  stage: test
  services:
    - postgres:14
  variables:
    POSTGRES_DB: app
    POSTGRES_USER: user_testing
    POSTGRES_PASSWORD: password_testing
    SQLALCHEMY_DATABASE_URI: "postgresql+psycopg2://user_testing:password_testing@postgres:5432/app"
    CONFIG: "TestingConfig"
    COVERAGE_DIR: "coverage-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
  before_script:
    - python -m pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
    - flask db upgrade
  script:
    - pytest -s -vv -rsx --cov=views --cov=models --cov-report=html:$COVERAGE_DIR
  artifacts:
    name: "coverage-report"
    paths:
      - $COVERAGE_DIR
    expire_in: 1 week
    when: on_success


build-and-push-image:
  stage: build-and-push
  image: docker:20.10.7
  only:
    - master
  services:
    - docker:20.10.7-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache docker-compose
    - docker login -u mahenzon -p $DOCKER_HUB_PASSWORD
  script:
    - echo build and push image
    - docker-compose pull shop-prod
    - docker-compose build --build-arg BUILDKIT_INLINE_CACHE=1 shop-prod
    - docker-compose push shop-prod
    - echo done building and pushing image

deploy-job:
  stage: deploy
  only:
    - master
  script:
    - curl -X POST https://httpbin.org/post -H "x-job-name:$CI_JOB_NAME" -H "x-commit-sha:$CI_COMMIT_SHORT_SHA"
